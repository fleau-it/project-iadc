# docker-compose-nc.yml
# MAJ le 27/07/2020 par Florian LEAU
# --------------------------------------------------------------------------------------------------------------------------
# Changements apportés :
# -> remplacement des "todocenter.fr" par "atomikcactus.net"
# -> ajout des conteneurs pour déployer NextCloud
# -> ajout du conteneur de netdata
# -> Retour à la version 3 du docker-compose
# -> Modification du volume pour nginx-nc
# -> Modification des volumes de tous les conteneurs pour stockage dans dossier local du docker-compose
# -> 
# Points + :
# -> 
# -> 
# Problèmes :
# -> volume_from invalide en version 3
# -> 
# A ajouter / à faire / à résoudre :
# -> 
# -> 
# --------------------------------------------------------------------------------------------------------------------------
# Sources :
# - https://hub.docker.com/_/nextcloud
# - https://stackoverflow.com/questions/42244079/how-to-replace-volumes-from-in-docker-composer-v3
# - 
# --------------------------------------------------------------------------------------------------------------------------
version: '2'

services:
  traefik22-rv-proxy:
    image: "traefik:v2.2"
    #container_name: "traefik22-rv-proxy"
    container_name: "tr22-rvp-nc"
    command:
      - "--log.level=DEBUG" # Config Log ; niveau d'informations ()
      #- "--log.format=json" # Config Log ; Format des logs (classique ou json)
      - "--log.filePath=/var/log/traefik-log/traefik.log" # Config Log
      - "--accesslog=true" # Config Access Log
      - "--accesslog.filepath=/var/log/traefik-log/access.log" # Config Access Log
      - "--accesslog.bufferingsize=100" # Config Access Log, number of log lines Traefik will keep in memory before writing them to the selected output
      - "--api.dashboard=true" # Activation du dashboard
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false" # Défini si Traefik ajoute automatiquement ou non les conteneurs en backfront
      # Implique d'ajouter traefik.enable=true dans la catégorie label de chaque conteneur déployé si exposedbydefault=false
      - "--entrypoints.web.address=:80" #Config de base
      - "--entrypoints.websecure.address=:443" #Config de base
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true" #Config ACME HTTP Challenge : Enable a http challenge named "myresolver"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web" #Config ACME HTTP Challenge : Tell it to use our predefined entrypoint named "web"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory" #Certificat pour phase prod
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/acme/acct/87563063" #Certificat pour phase prod
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory" #Certificat pour phase Dev/test
      - "--certificatesresolvers.myresolver.acme.email=florian.leau@gmail.com" #Config ACME : The email to provide to let's encrypt
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" #Config ACME
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json" #Config ACME ; emplacement interne de stockage des certificats
      #- "--certificatesresolvers.myresolver.acme.storage=acme.json" #Config ACME
      #- "--certificatesresolvers.myresolver.acme.tlschallenge=true" #Config ACME
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure" # Global HTTP to HTTPS redirection, static configuration
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https" # Global HTTP to HTTPS redirection, static configuration
      - "--entrypoints.websecure.address=:443" # Global HTTP to HTTPS redirection, static configuration
      # Tests config gestion port 1433 pour routage MSSQL
      #- "--entrypoints.mssql.address=:1433" #testFL"
    labels:
      # HTTP to HTTPS redirection
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      # Dashboard sécurisé
      - "traefik.enable=true"
      #- "traefik.http.routers.api.rule=Host(`atomikcactus.net`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))" #OK
      - "traefik.http.routers.api.rule=Host(`traefik.atomikcactus.net`)" #OK
      - "traefik.http.routers.api.service=api@internal" #OK
      - "traefik.http.routers.api.entrypoints=websecure" #OK
      - "traefik.http.routers.api.tls.certresolver=myresolver" #OK
      - "traefik.http.routers.api.middlewares=auth" #Parti authentification : OK
      - "traefik.http.middlewares.auth.basicauth.users=ato:$$apr1$$v2/bgiLv$$GdA.vfWNBj0SrWYTF2vek/" #Parti authentification : OK ; login/mdp pour accès au dashboard : ato/ato ; traefik.atomikcactus.net
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
      #- "1433:1433" #MSSQL
    volumes:
      #- "/root/traefik-v22:/letsencrypt"
      - "/root/traefik-v22/acme.json:/acme.json" # Correspondance des dossiers de stockage réel et conteneur des certificats 
      #- "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"
      - "./traefik-log:/var/log/traefik-log" # Correspondance des dossiers de stockage réel et conteneur des logs
    networks:
      - traefik-net

  nginx:
    image: nginx:latest
    restart: always
    container_name: "nginx-poc"
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.nginx.rule=Host(`traefik-nginx.atomikcactus.net`)"
      #- "traefik.http.routers.nginx.entrypoints=websecure"
      #- "traefik.http.routers.nginx.tls.certresolver=myresolver"
      #traefik.http.routers.nginx.rule: Host(`traefik-nginx.atomikcactus.net`)
      #traefik.http.routers.nginx.entrypoints: web
      #- "traefik.http.routers.nginx.rule=Host(`atomikcactus.net`)"
      #- "traefik.http.routers.nginx.entrypoints=web"
      #traefik.http.routers.nginx.middlewares: https_redirect
      #traefik.http.routers.nginxsecured.rule: Host(`traefik-nginx.atomikcactus.net`)
      #traefik.http.routers.nginxsecured.entrypoints: websecure
      #traefik.http.routers.nginxsecured.tls: true
      - "traefik.http.routers.nginxsecured.rule=Host(`atomikcactus.net`)"
      - "traefik.http.routers.nginxsecured.entrypoints=websecure"
      - "traefik.http.routers.nginxsecured.tls=true"
      - "traefik.http.routers.nginxsecured.tls.certresolver=myresolver"
    networks:
      - traefik-net

  nextcloud:
    image: nextcloud:19.0.1-fpm
    restart: always
    #container_name: "flnc"
    #ports:
    #  - "80:80"
    volumes:
      - "./nc/:var/www/html/"
      - "./nc-data/:var/www/html/data/"
    links:
      - "bdd"
  
  bdd:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    #container_name: "flmariadb"
    volumes:
      - "./mariadb-data/:var/lib/mysql/"
    environment:
      - MYSQL_ROOT_PASSWORD=rootAzerty@123
      - MYSQL_DATABASE=nc
      - MYSQL_USER=ncbdduser
      - MYSQL_PASSWORD=ncAzerty@123

  nginxnc:
    image: nginx:latest
    restart: always
    #container_name: "nginx-poc"
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.nginx.rule=Host(`traefik-nginx.atomikcactus.net`)"
      #- "traefik.http.routers.nginx.entrypoints=websecure"
      #- "traefik.http.routers.nginx.tls.certresolver=myresolver"
      #traefik.http.routers.nginx.rule: Host(`traefik-nginx.atomikcactus.net`)
      #traefik.http.routers.nginx.entrypoints: web
      #- "traefik.http.routers.nginxnc.rule=Host(`nextcloud.atomikcactus.net`)"
      #- "traefik.http.routers.nginxnc.entrypoints=web"
      #traefik.http.routers.nginx.middlewares: https_redirect
      #traefik.http.routers.nginxsecured.rule: Host(`traefik-nginx.atomikcactus.net`)
      #traefik.http.routers.nginxsecured.entrypoints: websecure
      #traefik.http.routers.nginxsecured.tls: true
      - "traefik.http.routers.nginxncsecured.rule=Host(`nextcloud.atomikcactus.net`)"
      - "traefik.http.routers.nginxncsecured.entrypoints=websecure"
      - "traefik.http.routers.nginxncsecured.tls=true"
      - "traefik.http.routers.nginxncsecured.tls.certresolver=myresolver"
    links:
      - nextcloud
    volumes:
    #  - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    #volumes_from:
    #  - nextcloud
    networks:
      - traefik-net

  netdata:
    image: netdata/netdata
    #container_name: netdata
    hostname: example.com # set to fqdn of host
    #ports:
    #  - "19999:19999"
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./netdata/netdatalib:/var/lib/netdata
      - ./netdata/netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netdatasec.rule=Host(`netdata.atomikcactus.net`)"
      - "traefik.http.routers.netdatasec.entrypoints=websecure"
      - "traefik.http.routers.netdatasec.tls=true"
      - "traefik.http.routers.netdatasec.tls.certresolver=myresolver"
      #- "traefik.http.middlewares.netdatasec.redirectscheme.port=19999"
      #- "traefik.http.routers.grafanasec.service=grafana"
      - "traefik.http.services.netdatasec.loadbalancer.server.port=19999"
    networks:
      - traefik-net

#volumes:
#  netdatalib:
#  netdatacache:

networks:
  traefik-net:
    external: true